[{"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/index.js":"1","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/reportWebVitals.js":"2","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignUp.jsx":"3","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/App.jsx":"4","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignIn.jsx":"5","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/Profile.jsx":"6"},{"size":500,"mtime":1607937177515,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607937177515,"results":"9","hashOfConfig":"8"},{"size":5788,"mtime":1608372622486,"results":"10","hashOfConfig":"8"},{"size":764,"mtime":1607985420272,"results":"11","hashOfConfig":"8"},{"size":4924,"mtime":1608374185989,"results":"12","hashOfConfig":"8"},{"size":1715,"mtime":1608019383234,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1s795lp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/index.js",[],["28","29"],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/reportWebVitals.js",[],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignUp.jsx",["30","31"],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/App.jsx",[],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignIn.jsx",["32","33"],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/Profile.jsx",["34","35"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState({\n    email: 'homer.simpson@wildcodeschool.fr',\n    name: 'Homer',\n    lastname: 'Simpson',\n  });\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      style={{\n        height: '100%',\n        maxWidth: '1200px',\n        margin: '0 auto',\n      }}\n    >\n      <Grid\n        item\n        xs={12}\n        style={{ minHeight: '100vh', display: 'flex', alignItems: 'center' }}\n      >\n        <Paper\n          elevation={4}\n          style={{\n            margin: '0 auto',\n            padding: 32,\n          }}\n        >\n          <Grid container alignItems=\"center\" justify=\"center\">\n            <Grid\n              style={{\n                textAlign: 'left',\n                position: 'relative',\n                width: '100%',\n              }}\n              className=\"nav\"\n            >\n              <Button variant=\"contained\" style={{ margin: '0 8px' }}>\n                <Link to=\"/signin\" className=\"navlink\">\n                  Log out\n                </Link>\n              </Button>\n            </Grid>\n            <List>\n              <ListItem>\n                <ListItemText primary=\"email\" secondary=\"mon email\" />\n              </ListItem>\n            </List>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Profile;\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":107,"column":15,"nodeType":"42","endLine":107,"endColumn":89},{"ruleId":"43","severity":1,"message":"44","line":146,"column":19,"nodeType":"45","endLine":146,"endColumn":34},{"ruleId":"40","severity":1,"message":"41","line":114,"column":15,"nodeType":"42","endLine":114,"endColumn":89},{"ruleId":"43","severity":1,"message":"44","line":153,"column":19,"nodeType":"45","endLine":153,"endColumn":34},{"ruleId":"46","severity":1,"message":"47","line":11,"column":10,"nodeType":"48","messageId":"49","endLine":11,"endColumn":17},{"ruleId":"46","severity":1,"message":"50","line":11,"column":19,"nodeType":"48","messageId":"49","endLine":11,"endColumn":29},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'profile' is assigned a value but never used.","Identifier","unusedVar","'setProfile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]