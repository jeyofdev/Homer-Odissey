[{"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/index.js":"1","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/reportWebVitals.js":"2","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignUp.jsx":"3","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/App.jsx":"4","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignIn.jsx":"5","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/Profile.jsx":"6"},{"size":500,"mtime":1607937177515,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607937177515,"results":"9","hashOfConfig":"8"},{"size":5634,"mtime":1608035550415,"results":"10","hashOfConfig":"8"},{"size":764,"mtime":1607985420272,"results":"11","hashOfConfig":"8"},{"size":4686,"mtime":1608031663796,"results":"12","hashOfConfig":"8"},{"size":1715,"mtime":1608019383234,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1s795lp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/index.js",[],["31","32"],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/reportWebVitals.js",[],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignUp.jsx",["33","34"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst styles = () => ({\n  button: {\n    display: 'block',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  textField: {\n    width: '100%',\n  },\n});\n\nconst SignUp = (props) => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    passwordVerif: '',\n    name: '',\n    lastname: '',\n  });\n  const [flash, setFlash] = useState({\n    success: '',\n    error: '',\n  });\n  const [formisSubmit, setFormIsSubmit] = useState(false);\n\n  const updateEmailField = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post('/auth/signup', user)\n      .then((response) => response.data)\n      .then(\n        (res) => setFlash({ ...flash, success: res.flash }),\n        (err) => setFlash({ ...flash, success: '', error: 'Ooops, problem' })\n      );\n\n    setFormIsSubmit(true);\n  };\n\n  const { classes } = props;\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      style={{ height: '100%', maxWidth: '1200px', margin: '0 auto' }}\n    >\n      <Grid\n        item\n        xs={12}\n        style={{ minHeight: '100vh', display: 'flex', alignItems: 'center' }}\n      >\n        <Paper\n          elevation={4}\n          style={{\n            margin: 32,\n            padding: 32,\n          }}\n        >\n          <Grid container alignItems=\"center\" justify=\"center\">\n            <Grid\n              style={{\n                textAlign: 'left',\n                position: 'relative',\n                width: '100%',\n              }}\n              className=\"nav\"\n            >\n              <Button variant=\"contained\" style={{ margin: '0 8px' }}>\n                <Link to=\"/signin\" className=\"navlink\">\n                  SignUp\n                </Link>\n              </Button>\n              <Button variant=\"contained\" style={{ margin: '0 8px' }}>\n                <Link to=\"/profile\" className=\"navlink\">\n                  Profile\n                </Link>\n              </Button>\n            </Grid>\n            <Grid item xs={12} sm={6} style={{ textAlign: 'center' }}>\n              {' '}\n              <img src=\"http://images.innoveduc.fr/react_odyssey_homer/wildhomer.png\" />{' '}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {formisSubmit &&\n                (flash.success ? (\n                  <SnackbarContent\n                    className={classes.snackbar}\n                    message={flash.success}\n                    style={{ backgroundColor: '#43a047' }}\n                  />\n                ) : (\n                  <SnackbarContent\n                    className={classes.snackbar}\n                    message={flash.error}\n                    style={{ backgroundColor: '#d32f2f' }}\n                  />\n                ))}\n\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e) => handleSubmit(e)}\n                style={{ marginTop: '16px' }}\n              >\n                <TextField\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <TextField\n                  type=\"password\"\n                  name=\"passwordVerif\"\n                  label=\"Password confirmation\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <TextField\n                  type=\"text\"\n                  name=\"name\"\n                  label=\"name\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <TextField\n                  type=\"text\"\n                  name=\"lastname\"\n                  label=\"lastname\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.textField}\n                  style={{\n                    paddingTop: '16px',\n                    paddingBottom: '16px',\n                    marginTop: '16px',\n                  }}\n                >\n                  Submit\n                </Button>\n              </form>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(SignUp);\n","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/App.jsx",[],"/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/SignIn.jsx",["35","36"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\n\nconst styles = () => ({\n  button: {\n    display: 'block',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n  input: {\n    display: 'none',\n  },\n  textField: {\n    width: '100%',\n  },\n});\n\nconst SignIn = (props) => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  });\n  const [flash, setFlash] = useState({\n    success: '',\n    error: '',\n  });\n  const [formisSubmit, setFormIsSubmit] = useState(false);\n\n  const updateEmailField = (e) => {\n    setUser({ ...user, [e.target.name]: e.target.value });\n  };\n\n  console.log(flash);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    axios\n      .post('/auth/signin', user)\n      .then((response) => response.data)\n      .then(\n        (res) => setFlash({ ...flash, success: res.flash, error: '' }),\n        (err) => console.log(err)\n      );\n\n    setFormIsSubmit(true);\n  };\n\n  const { classes } = props;\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      style={{ height: '100%', maxWidth: '1200px', margin: '0 auto' }}\n    >\n      <Grid\n        item\n        xs={12}\n        style={{ minHeight: '100vh', display: 'flex', alignItems: 'center' }}\n      >\n        <Paper\n          elevation={4}\n          style={{\n            margin: 32,\n            padding: 32,\n          }}\n        >\n          <Grid container alignItems=\"center\" justify=\"center\">\n            <Grid\n              style={{\n                textAlign: 'left',\n                position: 'relative',\n                width: '100%',\n              }}\n              className=\"nav\"\n            >\n              <Button variant=\"contained\" style={{ margin: '0 8px' }}>\n                <Link to=\"/signup\" className=\"navlink\">\n                  SignUp\n                </Link>\n              </Button>\n              <Button variant=\"contained\" style={{ margin: '0 8px' }}>\n                <Link to=\"/profile\" className=\"navlink\">\n                  Profile\n                </Link>\n              </Button>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              style={{ textAlign: 'center', position: 'relative' }}\n            >\n              {' '}\n              <img src=\"http://images.innoveduc.fr/react_odyssey_homer/wildhomer.png\" />{' '}\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              {formisSubmit &&\n                (flash.success ? (\n                  <SnackbarContent\n                    className={classes.snackbar}\n                    message={flash.success}\n                    style={{ backgroundColor: '#43a047' }}\n                  />\n                ) : (\n                  <SnackbarContent\n                    className={classes.snackbar}\n                    message={flash.error}\n                    style={{ backgroundColor: '#d32f2f' }}\n                  />\n                ))}\n\n              <form\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={(e) => handleSubmit(e)}\n                style={{ marginTop: '16px' }}\n              >\n                <TextField\n                  type=\"email\"\n                  name=\"email\"\n                  label=\"Email\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <TextField\n                  type=\"password\"\n                  name=\"password\"\n                  label=\"Password\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  className={classes.textField}\n                  onChange={(e) => updateEmailField(e)}\n                />\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.textField}\n                  style={{\n                    paddingTop: '16px',\n                    paddingBottom: '16px',\n                    marginTop: '16px',\n                  }}\n                >\n                  Submit\n                </Button>\n              </form>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(SignIn);\n","/Users/jeremygregoire/Sites/sites/wild_code_school/fil-rouge/front/src/components/Profile.jsx",["37","38"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState({\n    email: 'homer.simpson@wildcodeschool.fr',\n    name: 'Homer',\n    lastname: 'Simpson',\n  });\n\n  return (\n    <Grid\n      container\n      alignItems=\"center\"\n      style={{\n        height: '100%',\n        maxWidth: '1200px',\n        margin: '0 auto',\n      }}\n    >\n      <Grid\n        item\n        xs={12}\n        style={{ minHeight: '100vh', display: 'flex', alignItems: 'center' }}\n      >\n        <Paper\n          elevation={4}\n          style={{\n            margin: '0 auto',\n            padding: 32,\n          }}\n        >\n          <Grid container alignItems=\"center\" justify=\"center\">\n            <Grid\n              style={{\n                textAlign: 'left',\n                position: 'relative',\n                width: '100%',\n              }}\n              className=\"nav\"\n            >\n              <Button variant=\"contained\" style={{ margin: '0 8px' }}>\n                <Link to=\"/signin\" className=\"navlink\">\n                  Log out\n                </Link>\n              </Button>\n            </Grid>\n            <List>\n              <ListItem>\n                <ListItemText primary=\"email\" secondary=\"mon email\" />\n              </ListItem>\n            </List>\n          </Grid>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Profile;\n",["39","40"],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":99,"column":15,"nodeType":"47","endLine":99,"endColumn":89},{"ruleId":"48","severity":1,"message":"49","line":138,"column":19,"nodeType":"50","endLine":138,"endColumn":34},{"ruleId":"45","severity":1,"message":"46","line":103,"column":15,"nodeType":"47","endLine":103,"endColumn":89},{"ruleId":"48","severity":1,"message":"49","line":142,"column":19,"nodeType":"50","endLine":142,"endColumn":34},{"ruleId":"51","severity":1,"message":"52","line":11,"column":10,"nodeType":"53","messageId":"54","endLine":11,"endColumn":17},{"ruleId":"51","severity":1,"message":"55","line":11,"column":19,"nodeType":"53","messageId":"54","endLine":11,"endColumn":29},{"ruleId":"41","replacedBy":"56"},{"ruleId":"43","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'profile' is assigned a value but never used.","Identifier","unusedVar","'setProfile' is assigned a value but never used.",["58"],["59"],"no-global-assign","no-unsafe-negation"]